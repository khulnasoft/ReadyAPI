name: Deploy Docs
on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - Build Docs
    types:
      - completed

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4

      - name: Clean site
        run: |
          rm -rf ./site
          mkdir ./site

      - name: Download Artifact Docs
        id: download
        uses: dawidd6/action-download-artifact@v6
        with:
          if_no_artifact_found: ignore
          github_token: ${{ secrets.ORG_REPO_TOKEN }}
          workflow: build-docs.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: docs-site
          path: ./site/

      - name: Configure Git
        run: |
          git config --global user.email "info@khulnasoft.com"
          git config --global user.name "khulnasoft-bot"

      - name: Deploy to GitHub Pages
        if: steps.download.outputs.found_artifact == 'true'
        run: |
          cd ./site
          git init
          git add .
          git commit -m "Deploy docs"
          git remote add origin https://github.com/${{ github.repository }}
          git push --force origin master:gh-pages

      - name: Find PR for Commit
        id: find_pr
        run: |
          PR_URL=$(gh pr list --state open --json number,headRefName -q ".[] | select(.headRefName == \"${{ github.event.workflow_run.head_branch }}\") | .url")
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV

      - name: Comment Deploy
        if: steps.find_pr.outputs.PR_URL != ''
        uses: ./.github/actions/comment-docs-preview-in-pr
        with:
          token: ${{ secrets.ORG_REPO_TOKEN }}
          deploy_url: "https://${{ github.repository_owner }}.github.io/${{ github.repository }}"
